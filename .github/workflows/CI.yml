name: CI
on:
  pull_request:
  push:
    # branches:
    #   - master

jobs:
  Build:
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
        atom_channel:
          - stable
    steps:
      - uses: actions/checkout@v2
      - uses: atom-community/action-setup-atom@v1
        with:
          channel: ${{ matrix.atom_channel }}

      - name: Install dependencies and build
        run: |
          apm install

          npm run clean
          npm run tsc || echo done

          npm run build

      - name: Upload built files
        uses: actions/upload-artifact@v2
        with:
          path: |
            ./dist

  Test:
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    needs: Build
    name: ${{ matrix.os }} - Atom ${{ matrix.atom_channel }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
        atom_channel: [stable, beta]
    steps:
      - uses: actions/checkout@v2
      - uses: atom-community/action-setup-atom@v1
        with:
          channel: ${{ matrix.atom_channel }}

      - name: Download articats
        uses: actions/download-artifact@v2
      - name: Place artifacts
        shell: bash
        run: |
          rm -rf ./dist
          mkdir ./dist
          cp -r ./artifact/* ./dist
          rm -rf ./artifact

      - name: Install dependencies
        run: |
          apm install

      - name: Run tests 👩🏾‍💻
        run: npm run test

  Lint:
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - if: "!contains(github.event.head_commit.message, 'Prepare')"
        name: Commit lint ✨
        uses: wagoid/commitlint-github-action@v2

      - name: Install dependencies
        run: npm install --ignore-scripts

      - name: Format ✨
        run: npm run test.format

      - name: Lint ✨
        run: npm run test.lint
